name: Safe QA Nightly

on:
  schedule:
    - cron: '0 6 * * *'  # 06:00 UTC daily
  workflow_dispatch:

jobs:
  safe-qa:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Safe QA (no external sends)
        env:
          TB_NO_TELEGRAM: '1'
          TB_NO_DISCORD: '1'
          TB_POLYMARKET_PPLX_USE_PLAIN_ONLY: '1'
          TB_POLYMARKET_FALLBACK_NATIVE: '1'
        run: |
          python scripts/safe_qa.py

      - name: Update hit-rate trend and summaries (safe)
        env:
          TB_NO_TELEGRAM: '1'
          TB_NO_DISCORD: '1'
        run: |
          # Append trend CSV
          python scripts/hit_rate_trend.py
          # Also write a Markdown summary and failures CSV for the latest repo-wide run
          python scripts/asset_hit_rate.py \
            --runs_dir universe_runs \
            --bars_dir bars \
            --runs_map_dir runs \
            --debug \
            --failures_csv eval_runs/hit_rate_failures.csv \
            --markdown_out eval_runs/hit_rate_summary.md

      - name: Plot hit-rate trend (safe)
        run: |
          python scripts/plot_hit_rate_trend.py --csv eval_runs/hit_rate_trend.csv --out eval_runs/hit_rate_trend.png

      - name: Compare nightly hit-rate vs previous (log only)
        env:
          TB_HITRATE_REG_THRESH: '0.05'
        run: |
          python scripts/hit_rate_compare.py

      - name: Commit and push artifacts (all non-code repo-wide)
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          python - << 'PY'
          import autocommit as ac
          res = ac.auto_commit_and_push(['.'], extra_message='Nightly QA artifacts [skip ci]', push_enabled=True)
          print(res)
          PY
